name: CKAN

on:
  workflow_dispatch:
  push:
    paths:
      - 'dataset/**'

jobs:
  publish_update:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install packages
        run: pip install -r requirements.txt
#      - name: Commit CSV
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Converte Excel para CSV via script.
      - name: Create dynamic documentation
        run: task documentation
      - name: Commit markdown files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
           commit_message: Cria arquivos markdown via script.
#      - name: Local dataset validation
#        run: task validate
#      - name: Commit new datapackage_validation.json
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Cria datapackage_validation.json via script.
#      - name: Create Report
#        continue-on-error: true
#        run: task report
#      - name: Commit new index.html report file.
#        uses: stefanzweifel/git-auto-commit-action@v4
#        with:
#          commit_message: Cria arquivo index.html de validação.
      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{ github.actor }}
      - name: Create dataset in CKAN with not exist
        continue-on-error: true
        env:
          CKAN_HOST: ${{ secrets.CKAN_HOST }}
          CKAN_KEY: ${{ secrets[format('CKAN_KEY_{0}', steps.string.outputs.uppercase)] }}
        run: dpckan --datastore --datapackage dataset/datapackage.json --ckan-host "$CKAN_HOST" --ckan-key "$CKAN_KEY" dataset create
      - name: Update dataset in CKAN with dpckan with exist
        if: ${{ ! cancelled() }}
        env:
          CKAN_HOST: ${{ secrets.CKAN_HOST }}
          CKAN_KEY: ${{ secrets[format('CKAN_KEY_{0}', steps.string.outputs.uppercase)] }}
        run: dpckan --datastore --datapackage dataset/datapackage.json --ckan-host "$CKAN_HOST" --ckan-key "$CKAN_KEY" dataset update
